on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*_es*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: release

jobs:
  build:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract Versions
        id: extract_versions
        run: |
          BUILD_STRING=$(echo ${GITHUB_REF#refs/tags/} | sed -r 's/v(.+)/\1/g')
          ES_VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed -r 's/v.+_es(.+)$/\1/g')
          echo ::set-output name=BUILD_STRING::${BUILD_STRING}
          echo ::set-output name=ES_VERSION::${ES_VERSION}
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8.0.x
      - uses: eskatos/gradle-command-action@v2
        env:
          GPR_AUTH_TOKEN: ${{secrets.GPR_AUTH_TOKEN}}
          esVersion: ${{ steps.extract_versions.outputs.ES_VERSION }}
        with:
          arguments: clean assemble
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/stored-synonyms-${{ steps.extract_versions.outputs.BUILD_STRING }}.zip
          asset_name: stored-synonyms-${{ steps.extract_versions.outputs.BUILD_STRING }}.zip
          asset_content_type: application/zip